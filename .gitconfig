[alias]
	st = status
	br = for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
	ch = checkout
	ci = commit
	wt = worktree
	cp = cherry-pick
	tree = log --graph --decorate --pretty=oneline --abbrev-commit
	unmerge = reset --merge ORIG_HEAD
	new = !git log @{1}..@{0}
	log-remote-changes = !git log ..$(git rev-parse --abbrev-ref --symbolic-full-name @{u})
	fforward = !git merge --ff-only $(git rev-parse --abbrev-ref --symbolic-full-name @{u})
	standup = !git log --author=\"$(git config --get user.name)\" --since=\"$([[ "1" == "$(date +%u)" ]] && echo last friday.midnight || echo yesterday.midnight)\"
	fixup = "!sh -c '(git diff-files --quiet || (echo Unstaged changes, please commit or stash with --keep-index; exit 1)) && COMMIT=$(git rev-parse $1) && git commit --fixup=$COMMIT && git -c sequence.editor=: rebase -i --autosquash $COMMIT~1' -"
	up = "!f() { git update-ref refs/heads/$1 refs/remotes/${2:-origin}/$1; }; f"

[user]
	name = Vegard LÃ¸kken
	email = vegard@loekken.org
[push]
	default = current
[core]
	editor = vim
	excludesfile = ~/.gitignore
	autocrlf = input
[pull]
	rebase = false
[diff]
	wsErrorHighlight = all
